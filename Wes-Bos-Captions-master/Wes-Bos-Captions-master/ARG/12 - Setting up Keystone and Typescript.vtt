WEBVTT

1
00:00:01.440 --> 00:00:03.090
<v ->All right, let's get going with Keystone.</v>

2
00:00:03.090 --> 00:00:05.350
Now, there's one thing I need to tell you

3
00:00:05.350 --> 00:00:08.767
in that we're gonna be doing the backend in TypeScript.

4
00:00:08.767 --> 00:00:11.150
So, don't get scared

5
00:00:11.150 --> 00:00:13.830
I initially was gonna do it all in just JavaScript

6
00:00:13.830 --> 00:00:16.160
because especially for the frontend,

7
00:00:16.160 --> 00:00:17.920
there's a little bit more of a hurdle to get up

8
00:00:17.920 --> 00:00:18.760
and running with it

9
00:00:18.760 --> 00:00:20.500
and you have to know a lot about TypeScript

10
00:00:20.500 --> 00:00:21.333
and things like that

11
00:00:21.333 --> 00:00:23.606
and while I'm a big TypeScript fan,

12
00:00:23.606 --> 00:00:25.653
I didn't necessarily think it was worth it for the frontend

13
00:00:25.653 --> 00:00:27.850
just 'cause I wanted everybody to do it.

14
00:00:27.850 --> 00:00:32.640
But, I was looking at doing the backend in TypeScript

15
00:00:32.640 --> 00:00:35.435
because it's really not that much different

16
00:00:35.435 --> 00:00:38.740
than just regular .js files

17
00:00:38.740 --> 00:00:40.912
and the sort of IntelliSense

18
00:00:40.912 --> 00:00:42.410
and the code highlighting

19
00:00:42.410 --> 00:00:44.740
or the code hinting that we get

20
00:00:44.740 --> 00:00:47.740
is going to be well worth our time

21
00:00:47.740 --> 00:00:49.240
in getting set up with it.

22
00:00:49.240 --> 00:00:51.790
So, when we're working on the backend,

23
00:00:51.790 --> 00:00:55.610
all of our files are going to end in a .ts file

24
00:00:55.610 --> 00:00:58.180
and then anytime we hit something weird,

25
00:00:58.180 --> 00:00:59.013
that is not like,

26
00:00:59.013 --> 00:00:59.846
let's look at this.

27
00:00:59.846 --> 00:01:01.680
Like this is just JavaScript.

28
00:01:01.680 --> 00:01:02.513
Look at it,

29
00:01:02.513 --> 00:01:06.130
and the everything in here is just JavaScript.

30
00:01:06.130 --> 00:01:08.870
There are going to be a few little spots in it

31
00:01:08.870 --> 00:01:10.990
where we have to type something

32
00:01:10.990 --> 00:01:12.990
and if you've never done any TypeScript before

33
00:01:12.990 --> 00:01:14.660
don't worry, I'm gonna show you.

34
00:01:14.660 --> 00:01:17.170
Okay, we add this little piece of code

35
00:01:17.170 --> 00:01:19.880
and here's the benefit that we get from it.

36
00:01:19.880 --> 00:01:24.110
So, really just an extra, maybe 3% on doing,

37
00:01:24.110 --> 00:01:25.640
on the project to get TypeScript,

38
00:01:25.640 --> 00:01:26.840
and you're gonna get

39
00:01:26.840 --> 00:01:27.673
you're gonna see like,

40
00:01:27.673 --> 00:01:28.910
oh man, this is awesome,

41
00:01:28.910 --> 00:01:30.118
this is so worth worth doing.

42
00:01:30.118 --> 00:01:32.490
I understand why people like TypeScript so much.

43
00:01:32.490 --> 00:01:35.890
So, I plan on having an entire TypeScript course come out

44
00:01:35.890 --> 00:01:37.820
and getting into the nitty gritty of it

45
00:01:37.820 --> 00:01:40.670
but quite honestly, Keystone does all of the

46
00:01:40.670 --> 00:01:42.140
hard TypeScript stuff.

47
00:01:42.140 --> 00:01:44.580
We just simply have to use it in .ts files

48
00:01:44.580 --> 00:01:46.970
and all of that stuff comes along for free

49
00:01:46.970 --> 00:01:48.665
which is pretty slick.

50
00:01:48.665 --> 00:01:50.730
So, let's get up

51
00:01:50.730 --> 00:01:52.090
and running with Keystone

52
00:01:52.090 --> 00:01:53.670
and you're gonna have to like watch.

53
00:01:53.670 --> 00:01:54.810
'Cause I do this myself is

54
00:01:54.810 --> 00:01:56.710
whenever we create new files in the backend,

55
00:01:56.710 --> 00:01:58.330
make sure you use .ts

56
00:01:58.330 --> 00:02:00.280
and not .js.

57
00:02:00.280 --> 00:02:02.890
So we'll go here, right click new file

58
00:02:02.890 --> 00:02:05.460
and we're gonna call it keystone.ts

59
00:02:05.460 --> 00:02:07.170
see I typed the j there,

60
00:02:07.170 --> 00:02:10.380
ts gotta catch myself I'm sure I'm gonna do that.

61
00:02:10.380 --> 00:02:12.730
If I do it more than five times in this course,

62
00:02:13.798 --> 00:02:14.660
I'll do something,

63
00:02:14.660 --> 00:02:15.540
I'll jump in the lake

64
00:02:15.540 --> 00:02:16.660
or something like that.

65
00:02:16.660 --> 00:02:20.410
Okay, so that is what we have so far.

66
00:02:20.410 --> 00:02:21.340
First thing we need to do

67
00:02:21.340 --> 00:02:24.547
is we need to import .env/config

68
00:02:27.220 --> 00:02:28.810
and why that's important

69
00:02:28.810 --> 00:02:31.557
is because it's going to take all of the variables

70
00:02:31.557 --> 00:02:36.557
that we've put into our .env file,

71
00:02:36.590 --> 00:02:38.490
and these are called environmental variables.

72
00:02:38.490 --> 00:02:41.010
These are variables that are set on our local machine

73
00:02:41.010 --> 00:02:42.350
we're gonna also set them again

74
00:02:42.350 --> 00:02:44.740
when we deploy it to an actual server,

75
00:02:44.740 --> 00:02:47.830
but that's going to make those variables in this file

76
00:02:47.830 --> 00:02:52.550
available to us inside of this keystone.js file.

77
00:02:52.550 --> 00:02:54.031
Next up, what we need to do is

78
00:02:54.031 --> 00:02:56.500
define what our database URL is.

79
00:02:56.500 --> 00:03:00.000
So say const databaseURL =

80
00:03:00.000 --> 00:03:02.653
and then, how do we get it from this .env?

81
00:03:02.653 --> 00:03:07.590
Well we say process.env. what did we call it?

82
00:03:07.590 --> 00:03:09.170
I like to just copy paste it.

83
00:03:09.170 --> 00:03:11.850
So you don't accidentally goof anything up

84
00:03:11.850 --> 00:03:12.683
then we'll say

85
00:03:12.683 --> 00:03:14.870
or, and this is just a nice thing to do

86
00:03:14.870 --> 00:03:16.860
in case you're sending your code over to somebody else

87
00:03:16.860 --> 00:03:18.880
who has local install of it.

88
00:03:18.880 --> 00:03:23.880
Then say mongodb://localhost/keystone-sick-fits-tutorial,

89
00:03:33.030 --> 00:03:34.940
and that will just fall back to local hosts.

90
00:03:34.940 --> 00:03:37.710
If case you don't have a database you are all running there.

91
00:03:37.710 --> 00:03:40.760
Okay, next thing we need to do is

92
00:03:40.760 --> 00:03:42.700
to create some session config.

93
00:03:42.700 --> 00:03:47.130
So we are going to be logging in to the Keystone backend

94
00:03:47.130 --> 00:03:48.010
in order to do that,

95
00:03:48.010 --> 00:03:50.040
in order to authenticate the users

96
00:03:50.040 --> 00:03:52.230
in the frontend of our react application

97
00:03:52.230 --> 00:03:54.690
we are gonna use something called sessions.

98
00:03:54.690 --> 00:03:55.981
So what we do here is we say

99
00:03:55.981 --> 00:04:00.420
const sessionConfig = curly brackets

100
00:04:00.420 --> 00:04:02.530
and we say, maxAge: this is gonna be

101
00:04:02.530 --> 00:04:04.740
how long does the cookie?

102
00:04:04.740 --> 00:04:06.770
So it's gonna set a cookie in our browser

103
00:04:06.770 --> 00:04:08.530
that has this thing called JWT.

104
00:04:08.530 --> 00:04:10.709
We'll talk about that a little bit more in the future

105
00:04:10.709 --> 00:04:14.763
but basically how long does the user state signed in?

106
00:04:16.910 --> 00:04:21.690
And the answer to that is there's 60 seconds in a minute

107
00:04:21.690 --> 00:04:25.650
60 minutes in an hour, 24 hours in a day

108
00:04:25.650 --> 00:04:28.800
and 30 days, this is the one you can change for,

109
00:04:28.800 --> 00:04:30.490
how long, maybe I'm gonna do more,

110
00:04:30.490 --> 00:04:33.000
360 days, 'cause I hate when,

111
00:04:33.000 --> 00:04:37.510
like how long should they stay signed in?

112
00:04:37.510 --> 00:04:39.483
Okay, that's good.

113
00:04:40.410 --> 00:04:43.020
Then the other thing we do is secret,

114
00:04:43.020 --> 00:04:44.830
so this is when you're generating the cookie

115
00:04:44.830 --> 00:04:45.740
you need a secret

116
00:04:46.720 --> 00:04:49.570
and that should not be available to anybody else.

117
00:04:49.570 --> 00:04:51.780
Otherwise they'd be able to reverse engineer it.

118
00:04:51.780 --> 00:04:55.130
So we, again, we've put a secret right here, cookie secret.

119
00:04:55.130 --> 00:05:00.130
So say process.env.COOKIE_SECRET.

120
00:05:00.340 --> 00:05:03.120
Good, next thing we need to do

121
00:05:03.120 --> 00:05:06.500
is to import some methods from Keystone itself.

122
00:05:06.500 --> 00:05:08.290
So let's go up to the top here

123
00:05:08.290 --> 00:05:10.460
and we are going to import two things

124
00:05:10.460 --> 00:05:12.863
import config, createSchema}

125
00:05:16.120 --> 00:05:17.610
and that is going to go,

126
00:05:17.610 --> 00:05:19.820
Ooh, look at that, I just typed it in.

127
00:05:19.820 --> 00:05:22.103
It did it for us, so I'm gonna use that one.

128
00:05:25.650 --> 00:05:27.610
Here we go up here

129
00:05:27.610 --> 00:05:29.240
and is good.

130
00:05:29.240 --> 00:05:31.740
So we have import config, createSchema } from

131
00:05:31.740 --> 00:05:35.970
and this might be a little bit different @keystone-next,

132
00:05:35.970 --> 00:05:39.680
this might just be @keystone

133
00:05:39.680 --> 00:05:43.170
and I will cut into the video right now when that changes

134
00:05:43.170 --> 00:05:45.710
or another way you can tell if that has changed.

135
00:05:45.710 --> 00:05:47.810
If you look at the package, "Jason"

136
00:05:47.810 --> 00:05:50.150
if you take a look here, you see,

137
00:05:50.150 --> 00:05:52.020
these are all @keystone,

138
00:05:52.020 --> 00:05:53.163
keystone-next,

139
00:05:54.030 --> 00:05:56.520
and they will eventually change

140
00:05:56.520 --> 00:05:58.280
to either at@keystone

141
00:05:58.280 --> 00:06:00.220
or @keystonejs.

142
00:06:00.220 --> 00:06:01.885
Again, you can tell what they are

143
00:06:01.885 --> 00:06:05.310
by looking at the dependencies in your package Jason.

144
00:06:05.310 --> 00:06:07.400
I will also cut into the video

145
00:06:07.400 --> 00:06:08.550
and tell you

146
00:06:08.550 --> 00:06:10.500
that's just because this is currently in development mode

147
00:06:10.500 --> 00:06:11.410
while I'm recording this

148
00:06:11.410 --> 00:06:13.310
but eventually it's going to be published

149
00:06:13.310 --> 00:06:17.031
on their main NPM branch, so no problem there.

150
00:06:17.031 --> 00:06:19.250
Okay, so import config, creatSchema}

151
00:06:19.250 --> 00:06:20.480
now we'll go down here

152
00:06:20.480 --> 00:06:23.740
and we will export default config

153
00:06:23.740 --> 00:06:25.150
and inside of that config

154
00:06:25.150 --> 00:06:27.360
we have a whole lot of boiler plate.

155
00:06:27.360 --> 00:06:29.730
So, bear with us on this one.

156
00:06:29.730 --> 00:06:30.850
I'll explain it as we go.

157
00:06:30.850 --> 00:06:32.430
It's not the most exciting stuff,

158
00:06:32.430 --> 00:06:35.241
but in the next video we'll actually get into creating users

159
00:06:35.241 --> 00:06:36.290
and logging in

160
00:06:36.290 --> 00:06:37.680
and creating data types.

161
00:06:37.680 --> 00:06:39.480
So, in this config

162
00:06:39.480 --> 00:06:42.610
we have a couple properties, actually, it's an object.

163
00:06:42.610 --> 00:06:44.163
So let's do an object there,

164
00:06:45.040 --> 00:06:48.090
and we have a server:

165
00:06:48.090 --> 00:06:50.720
which is an object inside of that we have

166
00:06:50.720 --> 00:06:53.330
cors: which is an object

167
00:06:53.330 --> 00:06:55.073
and then you have the origin:

168
00:06:56.150 --> 00:07:01.150
and that is going to be http://localhost:7777

169
00:07:03.010 --> 00:07:04.790
actually, where do we have that?

170
00:07:04.790 --> 00:07:06.100
We don't need to manually do that.

171
00:07:06.100 --> 00:07:07.440
We can just say,

172
00:07:07.440 --> 00:07:10.373
process .env.frontend_URL

173
00:07:12.210 --> 00:07:13.504
and what that will allow us to do

174
00:07:13.504 --> 00:07:18.504
is because we are running as backend on a different port

175
00:07:19.030 --> 00:07:20.940
than we're running on the frontend,

176
00:07:20.940 --> 00:07:22.810
we need to be able to allow the data to go

177
00:07:22.810 --> 00:07:23.930
from the backend to the frontend.

178
00:07:23.930 --> 00:07:26.370
This won't be an issue when we actually deploy it

179
00:07:26.370 --> 00:07:27.280
and I'll cover that then,

180
00:07:27.280 --> 00:07:29.470
but for now we need that,

181
00:07:29.470 --> 00:07:33.080
and then we also wanna say credentials: true.

182
00:07:33.080 --> 00:07:35.560
That means that it will pass along that cookie

183
00:07:35.560 --> 00:07:38.313
that we just talked about creating when you create it.

184
00:07:39.510 --> 00:07:42.160
All right, next up we have is the database

185
00:07:42.160 --> 00:07:43.820
and don't worry that this is red

186
00:07:43.820 --> 00:07:45.850
we'll, that will go away once we've inputted

187
00:07:45.850 --> 00:07:47.960
all the data here,

188
00:07:47.960 --> 00:07:51.420
the database adapter is the first one we want

189
00:07:51.420 --> 00:07:53.180
is going to be mongoose.

190
00:07:53.180 --> 00:07:57.420
You see, this is the huge benefit of using TypeScript

191
00:07:57.420 --> 00:07:59.880
and this will often still happen in JavaScript files

192
00:07:59.880 --> 00:08:02.000
but you see how I just typed it adapter?

193
00:08:02.000 --> 00:08:02.833
And it's like, well,

194
00:08:02.833 --> 00:08:04.488
I know the possible properties

195
00:08:04.488 --> 00:08:06.958
for this state database is adapter

196
00:08:06.958 --> 00:08:09.940
or I think there's URL as well.

197
00:08:09.940 --> 00:08:11.950
and like, what is this?

198
00:08:11.950 --> 00:08:13.880
This is just random stuff, it's things you need,

199
00:08:13.880 --> 00:08:16.550
but the blue one is it knows what you want.

200
00:08:16.550 --> 00:08:17.820
So adapter,

201
00:08:17.820 --> 00:08:21.400
and then it knows the possible options are Knex

202
00:08:21.400 --> 00:08:23.890
which they use for postgres or mongoose.

203
00:08:23.890 --> 00:08:25.070
So we're gonna say mongoose

204
00:08:25.070 --> 00:08:27.160
that's what they use under the hood.

205
00:08:27.160 --> 00:08:31.140
and then your URL is going to be our databaseURL

206
00:08:31.140 --> 00:08:34.913
that's the variable that we just created right here, okay?

207
00:08:36.070 --> 00:08:41.070
And then we'll say TODO: ADD data seeding here

208
00:08:43.530 --> 00:08:44.830
we'll go get back to that.

209
00:08:46.820 --> 00:08:50.530
Now, next is the data types.

210
00:08:50.530 --> 00:08:53.380
Keystone refers to our data types as lists,

211
00:08:53.380 --> 00:08:55.240
a list of users, a list of products

212
00:08:55.240 --> 00:08:58.300
list of items, list of orders, things like that.

213
00:08:58.300 --> 00:09:01.027
So we'll say lists: createSchema

214
00:09:04.032 --> 00:09:06.133
and we have an object.

215
00:09:06.133 --> 00:09:07.814
We're gonna leave that empty

216
00:09:07.814 --> 00:09:12.814
but we're gonna say // Schema items go in here.

217
00:09:14.550 --> 00:09:15.900
Then the next one we say UI

218
00:09:16.850 --> 00:09:21.850
do you want people to be able to access this UI?

219
00:09:22.480 --> 00:09:24.381
Because in some applications

220
00:09:24.381 --> 00:09:26.300
you don't want to give access to this.

221
00:09:26.300 --> 00:09:28.800
You want people to manage all of the data

222
00:09:28.800 --> 00:09:31.690
from the actual frontend of their application.

223
00:09:31.690 --> 00:09:33.950
So we are going to, right now we're gonna say true,

224
00:09:33.950 --> 00:09:37.660
but then, when we hit permissions and roles

225
00:09:37.660 --> 00:09:39.190
we'll come back and change that.

226
00:09:39.190 --> 00:09:40.972
So, let's put a little to do in there.

227
00:09:40.972 --> 00:09:44.380
//TODO: change this for roles

228
00:09:44.380 --> 00:09:46.432
let's say, ISACCESSALLOWED:

229
00:09:46.432 --> 00:09:48.383
and we'll say true, okay?

230
00:09:49.870 --> 00:09:51.530
Oh, we're getting a little error here

231
00:09:51.530 --> 00:09:54.320
and it looks like it's expecting a function

232
00:09:54.320 --> 00:09:56.600
that can be run to validate the current session

233
00:09:56.600 --> 00:09:57.490
should have access to.

234
00:09:57.490 --> 00:09:59.350
Okay, so this should be a function.

235
00:09:59.350 --> 00:10:01.850
So let's just make a function that returns true.

236
00:10:01.850 --> 00:10:02.821
Okay, good.

237
00:10:02.821 --> 00:10:04.570
Again, we'll come back to that

238
00:10:05.542 --> 00:10:07.240
and then the last thing we want to do

239
00:10:07.240 --> 00:10:10.833
let's just put //TODO; Add session values here.

240
00:10:12.860 --> 00:10:14.020
So there's a lot in here

241
00:10:14.020 --> 00:10:16.670
that we're gonna come back to do,

242
00:10:16.670 --> 00:10:19.450
but for now let's just get the minimal up and running.

243
00:10:19.450 --> 00:10:20.569
I'm getting some red here

244
00:10:20.569 --> 00:10:23.010
and that is just because

245
00:10:23.010 --> 00:10:25.060
the Keystone package that we're using

246
00:10:25.060 --> 00:10:27.270
hasn't been updated for this just yet.

247
00:10:27.270 --> 00:10:31.400
So it's not expecting a server property with cores on it

248
00:10:31.400 --> 00:10:33.000
but just know that that's okay.

249
00:10:33.000 --> 00:10:35.317
One thing you can do is you can just do little thing

250
00:10:35.317 --> 00:10:38.400
and you say @ts: ignore

251
00:10:38.400 --> 00:10:39.660
and that will just ignore

252
00:10:39.660 --> 00:10:42.030
that coming URL.

253
00:10:42.030 --> 00:10:44.600
Okay, so I don't think that this is gonna work just yet

254
00:10:44.600 --> 00:10:47.290
but let's try it open up your terminal

255
00:10:47.290 --> 00:10:50.240
and we're gonna make sure we are in our backend folder

256
00:10:50.240 --> 00:10:53.170
and we run npm run dev,

257
00:10:53.170 --> 00:10:55.550
that's going to in turn run the Keystone command

258
00:10:55.550 --> 00:10:58.430
and it says dev server running on localhost:3000.

259
00:10:58.430 --> 00:10:59.693
Okay, good.

260
00:11:01.020 --> 00:11:02.900
Keystone is loading.

261
00:11:02.900 --> 00:11:04.590
Ready, boom.

262
00:11:04.590 --> 00:11:05.673
There it is.

263
00:11:05.673 --> 00:11:07.630
There's nothing here,

264
00:11:07.630 --> 00:11:09.660
there's, you can't even log in

265
00:11:09.660 --> 00:11:13.570
because we haven't even made concept of a user yet

266
00:11:13.570 --> 00:11:16.010
but that's just to show that our config

267
00:11:16.010 --> 00:11:18.550
has not yet been broken.

268
00:11:18.550 --> 00:11:20.870
So the next thing that we need to do

269
00:11:20.870 --> 00:11:24.210
is to create our actual users

270
00:11:24.210 --> 00:11:26.160
so we can sign into this thing.

271
00:11:26.160 --> 00:11:28.453
Now let's go ahead and do that in the next video.

