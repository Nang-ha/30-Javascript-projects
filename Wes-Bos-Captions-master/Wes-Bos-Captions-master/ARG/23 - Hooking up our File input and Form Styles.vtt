WEBVTT

1
00:00:00.189 --> 00:00:01.460
(whooshing)

2
00:00:01.460 --> 00:00:04.650
<v Wes>Let's get the rest of this form out</v>

3
00:00:04.650 --> 00:00:06.490
and let's also get some styling in it.

4
00:00:06.490 --> 00:00:10.310
So I believe I've given you a form styles.

5
00:00:10.310 --> 00:00:12.280
There we go, if we look at form.js

6
00:00:12.280 --> 00:00:15.060
and that is in our styles folder.

7
00:00:15.060 --> 00:00:17.610
You'll see it's some pretty basic styles

8
00:00:17.610 --> 00:00:20.870
just to give us a nice-looking form.

9
00:00:20.870 --> 00:00:24.670
The only other thing is this loading keyframe

10
00:00:24.670 --> 00:00:27.090
and I'm gonna show you what that does in just a second.

11
00:00:27.090 --> 00:00:30.000
So let's go here, let's go to our form tag

12
00:00:30.000 --> 00:00:32.150
and let's replace it with capital F.

13
00:00:32.150 --> 00:00:34.320
Let's double check that the closing Form tag

14
00:00:34.320 --> 00:00:35.153
has an F on it.

15
00:00:35.153 --> 00:00:36.130
Good.

16
00:00:36.130 --> 00:00:38.220
And then let's try to auto import it.

17
00:00:38.220 --> 00:00:40.090
Boom, we auto imported.

18
00:00:40.090 --> 00:00:42.460
There, look at that, look at how nice that looks already.

19
00:00:42.460 --> 00:00:43.535
Okay.

20
00:00:43.535 --> 00:00:46.460
Next, we want to, we can get rid of these buttons.

21
00:00:46.460 --> 00:00:49.480
I was just showing you how these methods work

22
00:00:49.480 --> 00:00:54.200
but we will have a button with the type of submit

23
00:00:54.200 --> 00:00:57.453
and then we'll just say plus Add Product.

24
00:00:58.700 --> 00:01:00.410
All right, next what we need

25
00:01:00.410 --> 00:01:03.120
is we need the ability to disable all of our inputs

26
00:01:03.120 --> 00:01:07.947
and each input can take a disabled attribute.

27
00:01:10.242 --> 00:01:11.380
You see like that.

28
00:01:11.380 --> 00:01:15.610
But if you wanna disable a whole group of inputs at once,

29
00:01:15.610 --> 00:01:18.230
unfortunately, you can't put a disabled attribute

30
00:01:18.230 --> 00:01:21.770
on the Form tag but you can put a disabled attribute

31
00:01:21.770 --> 00:01:23.150
on a fieldset.

32
00:01:23.150 --> 00:01:25.420
A field set is a way to allow you

33
00:01:25.420 --> 00:01:27.210
to group together multiple fields.

34
00:01:27.210 --> 00:01:29.970
So I don't know, I found this trick a while ago

35
00:01:29.970 --> 00:01:31.900
and I've been using it in all of my forms

36
00:01:31.900 --> 00:01:33.780
'cause I find it so handy

37
00:01:33.780 --> 00:01:36.460
just to be able to disable a whole set of inputs

38
00:01:36.460 --> 00:01:38.530
because when you click Add Product,

39
00:01:38.530 --> 00:01:39.820
there's gonna be a second or two

40
00:01:39.820 --> 00:01:42.300
while it's talking to the backend and validating

41
00:01:42.300 --> 00:01:44.810
and when we get to charging a credit card,

42
00:01:44.810 --> 00:01:46.660
it's gonna take a second to do that as well.

43
00:01:46.660 --> 00:01:48.540
So we'll need to just sort of disable the input

44
00:01:48.540 --> 00:01:51.877
so the user can't start deleting and adding things

45
00:01:51.877 --> 00:01:54.420
while we're doing work.

46
00:01:54.420 --> 00:01:57.560
So we'll go here and we'll just take a fieldset.

47
00:01:57.560 --> 00:02:02.560
And then we will wrap all of our stuff in that fieldset.

48
00:02:03.600 --> 00:02:05.616
And then watch, if we go to our fieldset here,

49
00:02:05.616 --> 00:02:10.616
we can say disabled is equal to,

50
00:02:11.030 --> 00:02:13.990
if you just say disabled is equal to true,

51
00:02:13.990 --> 00:02:18.990
you see how everything gets removed at that point

52
00:02:19.270 --> 00:02:22.853
and then if we take it off, oops,

53
00:02:26.023 --> 00:02:28.030
you'll see everything is editable.

54
00:02:28.030 --> 00:02:29.740
We also have another thing,

55
00:02:29.740 --> 00:02:32.820
so called aria-busy

56
00:02:32.820 --> 00:02:35.090
and that is an accessibility attribute

57
00:02:35.090 --> 00:02:36.910
where we can set that to true.

58
00:02:36.910 --> 00:02:37.760
And what that will do

59
00:02:37.760 --> 00:02:40.930
is it will give us this little loading indicator,

60
00:02:40.930 --> 00:02:42.530
showing us something that is happening.

61
00:02:42.530 --> 00:02:46.340
So rather than having like a class of loading

62
00:02:46.340 --> 00:02:48.220
or isBusy or anything like that,

63
00:02:48.220 --> 00:02:50.010
what I like to do is just reach

64
00:02:50.010 --> 00:02:53.240
for existing aria accessibility attributes

65
00:02:53.240 --> 00:02:57.070
and just use those to show a loading state.

66
00:02:57.070 --> 00:02:58.790
That way it's accessible

67
00:02:58.790 --> 00:03:02.080
as well as that way, it's easy to style.

68
00:03:02.080 --> 00:03:03.560
If we take a look here,

69
00:03:03.560 --> 00:03:05.850
and if we look for the word busy,

70
00:03:05.850 --> 00:03:08.420
here we go, we'll say when the fieldset

71
00:03:08.420 --> 00:03:10.665
has a busy attribute,

72
00:03:10.665 --> 00:03:15.070
what we do is we take this background image

73
00:03:15.070 --> 00:03:19.530
and we just change the animation on it

74
00:03:19.530 --> 00:03:21.730
and it's just moving the background

75
00:03:21.730 --> 00:03:23.210
of this thing really, really quickly.

76
00:03:23.210 --> 00:03:26.950
So if we were to change it to 0.1 second,

77
00:03:26.950 --> 00:03:29.230
look how, (Wes humming) look how fast that goes, right?

78
00:03:29.230 --> 00:03:31.850
So we're just showing the user that something

79
00:03:31.850 --> 00:03:34.890
is happening without having to add and remove classes.

80
00:03:34.890 --> 00:03:36.810
You simply just mark it as busy

81
00:03:36.810 --> 00:03:38.610
and then the CSS will pick it up from there.

82
00:03:38.610 --> 00:03:40.050
That's one of my favorite little tricks

83
00:03:40.050 --> 00:03:43.529
is using aria attributes to style them

84
00:03:43.529 --> 00:03:45.670
so that they're accessible,

85
00:03:45.670 --> 00:03:48.640
as well as for users can visually see

86
00:03:48.640 --> 00:03:50.480
that something is happening.

87
00:03:50.480 --> 00:03:52.470
All right, so we've got this fieldset here.

88
00:03:52.470 --> 00:03:54.560
We're going to take off the loading

89
00:03:54.560 --> 00:03:56.210
and disable the attributes for now

90
00:03:56.210 --> 00:03:57.940
'cause we don't have all those values

91
00:03:57.940 --> 00:03:59.990
from our mutation just yet.

92
00:03:59.990 --> 00:04:03.360
We also need a image

93
00:04:03.360 --> 00:04:06.140
and let's just go to this label here and duplicate it.

94
00:04:06.140 --> 00:04:10.333
We're gonna replace this one with Image, htmlFor image.

95
00:04:11.340 --> 00:04:14.490
The type is going to be a file.

96
00:04:14.490 --> 00:04:16.423
The id will be image.

97
00:04:17.270 --> 00:04:18.850
Name is image.

98
00:04:18.850 --> 00:04:21.150
Placeholder, there is no placeholder on that.

99
00:04:21.150 --> 00:04:23.200
There is no value in this case

100
00:04:24.170 --> 00:04:26.220
just because that's a different way

101
00:04:26.220 --> 00:04:29.430
that file uploads work in React

102
00:04:29.430 --> 00:04:33.170
and then we do keep the handleChange event happening there.

103
00:04:33.170 --> 00:04:34.280
There we go.

104
00:04:34.280 --> 00:04:36.040
Can we put a placeholder on an image?

105
00:04:36.040 --> 00:04:39.523
Placeholder is equal to Upload an Image!

106
00:04:41.570 --> 00:04:44.140
No, there's no placeholder on an image.

107
00:04:44.140 --> 00:04:45.440
If you wanted to do something,

108
00:04:45.440 --> 00:04:48.280
you would have to put it up in here

109
00:04:48.280 --> 00:04:50.780
and that way when we go ahead and select an image,

110
00:04:53.770 --> 00:04:55.313
boom, uh oh.

111
00:04:56.550 --> 00:04:58.450
Zero is read only.

112
00:04:58.450 --> 00:05:00.610
Okay, we've got a bit of an issue here with this image.

113
00:05:00.610 --> 00:05:02.020
Let's debug this right now.

114
00:05:02.020 --> 00:05:04.630
So is our useForm hook

115
00:05:04.630 --> 00:05:09.400
where we check if the type is equal to a file,

116
00:05:09.400 --> 00:05:14.400
we set the array of the value to be zero.

117
00:05:15.500 --> 00:05:16.333
Okay.

118
00:05:26.220 --> 00:05:27.350
Let's just do value.

119
00:05:27.350 --> 00:05:28.700
I'm not sure why I had that.

120
00:05:28.700 --> 00:05:29.730
Maybe that was wrong.

121
00:05:29.730 --> 00:05:32.740
Let's take the square brackets off that value.

122
00:05:32.740 --> 00:05:33.693
Refresh.

123
00:05:35.090 --> 00:05:37.590
Okay, so that gives us the image.

124
00:05:37.590 --> 00:05:39.470
The upload doesn't work yet.

125
00:05:39.470 --> 00:05:41.757
But we'll tackle that when we get to it

126
00:05:41.757 --> 00:05:44.570
and we'll just go one step further

127
00:05:44.570 --> 00:05:47.250
and look at our React Dev Tools

128
00:05:47.250 --> 00:05:50.780
and we'll go into our,

129
00:05:50.780 --> 00:05:53.010
which component specifically is it?

130
00:05:53.010 --> 00:05:54.650
Let's click on here.

131
00:05:54.650 --> 00:05:56.043
Go to our Components here.

132
00:05:59.120 --> 00:06:02.040
There we go, it's in the CreateProduct, our hooks,

133
00:06:02.040 --> 00:06:04.543
state, there we go.

134
00:06:05.380 --> 00:06:08.582
There's our image or the array.

135
00:06:08.582 --> 00:06:09.510
There we go, okay, that makes sense.

136
00:06:09.510 --> 00:06:11.253
So it's an array.

137
00:06:12.370 --> 00:06:15.971
I think what I wanted to do there

138
00:06:15.971 --> 00:06:20.971
is to set the value of the image not to an array of images

139
00:06:21.040 --> 00:06:23.830
but just to be the first item.

140
00:06:23.830 --> 00:06:24.763
Let's try that.

141
00:06:25.670 --> 00:06:27.080
Oh, now this is giving us an error.

142
00:06:27.080 --> 00:06:30.670
Use array destructuring, eslint preferred.

143
00:06:30.670 --> 00:06:34.870
Oh, I see, I see what I wanted to do there.

144
00:06:34.870 --> 00:06:37.820
You wanna destructure, we want this, right?

145
00:06:37.820 --> 00:06:42.820
We want the first file to be put into the value thing here

146
00:06:44.230 --> 00:06:46.470
but now I'm getting an ESLint error,

147
00:06:46.470 --> 00:06:48.610
which is not an error, it's a warning I guess.

148
00:06:48.610 --> 00:06:51.970
Like maybe you should destructure the first item

149
00:06:53.001 --> 00:06:56.130
into the value like that

150
00:06:56.130 --> 00:06:58.110
and that might look a little bit confusing

151
00:06:58.110 --> 00:06:59.090
but what this is saying

152
00:06:59.090 --> 00:07:02.690
is like if we had another variable called secondFile,

153
00:07:03.680 --> 00:07:05.150
that would go there but in our case,

154
00:07:05.150 --> 00:07:07.940
we're gonna say give me the first thing out

155
00:07:07.940 --> 00:07:10.140
of the e.target.files array

156
00:07:10.140 --> 00:07:13.370
and stick that thing into our value.

157
00:07:13.370 --> 00:07:17.883
Now I believe if we upload something,

158
00:07:19.120 --> 00:07:22.630
there we go, now our image is not an array

159
00:07:22.630 --> 00:07:24.330
but it's got all the stuff,

160
00:07:24.330 --> 00:07:27.879
the name and the buffer size,

161
00:07:27.879 --> 00:07:30.200
the type, all that good stuff.

162
00:07:30.200 --> 00:07:31.640
Okay, so that's the first one.

163
00:07:31.640 --> 00:07:35.340
Next what we wanna do is get the description going.

164
00:07:35.340 --> 00:07:38.118
So we'll go back to our CreateProduct here.

165
00:07:38.118 --> 00:07:42.540
We also need to put an image of an empty string here

166
00:07:42.540 --> 00:07:44.073
just as an initial value.

167
00:07:46.000 --> 00:07:50.720
And then let's go right below the price here, duplicate it.

168
00:07:50.720 --> 00:07:52.313
We'll say Description,

169
00:07:54.369 --> 00:07:58.850
htmlFor,

170
00:07:58.850 --> 00:08:00.480
description, type.

171
00:08:00.480 --> 00:08:03.660
Okay, so this is going to be a textarea

172
00:08:05.742 --> 00:08:07.680
and textareas cannot self-close,

173
00:08:07.680 --> 00:08:10.130
so we'll have to do that ourselves.

174
00:08:10.130 --> 00:08:10.963
Okay.

175
00:08:12.620 --> 00:08:15.460
Input, there's no type on the textarea.

176
00:08:15.460 --> 00:08:19.003
There's an id, a name and a placeholder.

177
00:08:21.120 --> 00:08:23.170
The value is inputs.description

178
00:08:23.170 --> 00:08:25.970
and onChange is the same onChange handler.

179
00:08:25.970 --> 00:08:26.803
Oh, look at that,

180
00:08:26.803 --> 00:08:30.040
maybe textareas can be self-closed in React.

181
00:08:30.040 --> 00:08:30.873
It's just auto.

182
00:08:30.873 --> 00:08:32.729
So you watch this, give it a save

183
00:08:32.729 --> 00:08:35.140
and my ESLint automatically did it.

184
00:08:35.140 --> 00:08:39.062
So in React land, textareas can be self-closed.

185
00:08:39.062 --> 00:08:41.140
That's not valid HTML.

186
00:08:41.140 --> 00:08:44.340
There we go, there's our description showing up

187
00:08:44.340 --> 00:08:45.970
because we have this nice little default here.

188
00:08:45.970 --> 00:08:49.530
Okay, so that's the first little bit of sort

189
00:08:49.530 --> 00:08:51.550
of rendering it on out.

190
00:08:51.550 --> 00:08:53.210
What we need to do now

191
00:08:53.210 --> 00:08:58.210
is to listen for when somebody clicks on this

192
00:08:58.520 --> 00:09:01.410
and we need to capture that event.

193
00:09:01.410 --> 00:09:02.730
So right now if I click on it,

194
00:09:02.730 --> 00:09:04.660
you see what it does is it just puts the stuff

195
00:09:04.660 --> 00:09:07.090
in the URL bar and that's not what we want.

196
00:09:07.090 --> 00:09:10.540
So what we'll do here is we'll take our Form tag

197
00:09:10.540 --> 00:09:12.840
and we'll listen for the submit event.

198
00:09:12.840 --> 00:09:16.170
So we'll say onSubmit is equal to,

199
00:09:16.170 --> 00:09:20.510
now, we could make another thing called handleSubmit

200
00:09:20.510 --> 00:09:21.610
and up here we could just make

201
00:09:21.610 --> 00:09:23.613
a function called handleSubmit

202
00:09:24.710 --> 00:09:27.310
or you can just do it in line.

203
00:09:27.310 --> 00:09:28.340
So you could do it here.

204
00:09:28.340 --> 00:09:31.310
You pass the event and you do all your work in here.

205
00:09:31.310 --> 00:09:32.580
Or I'm gonna show you another way

206
00:09:32.580 --> 00:09:35.810
is sometimes when your functions are small,

207
00:09:35.810 --> 00:09:37.903
you can just do them in line like this.

208
00:09:38.780 --> 00:09:40.810
That's just a little arrow function

209
00:09:40.810 --> 00:09:42.300
where you get the event

210
00:09:42.300 --> 00:09:44.330
and then here, we will e.preventDefault

211
00:09:45.510 --> 00:09:49.022
and that will stop it from submitting

212
00:09:49.022 --> 00:09:51.960
to the server side and putting all the stuff

213
00:09:51.960 --> 00:09:55.370
that we were setting in the URL bar here

214
00:09:55.370 --> 00:09:58.473
and then let's just console.log inputs.

215
00:09:59.580 --> 00:10:01.870
So Form submit, prevent the default

216
00:10:01.870 --> 00:10:03.400
and then log the inputs.

217
00:10:03.400 --> 00:10:05.048
So we'll open up our console here,

218
00:10:05.048 --> 00:10:07.660
go ahead and submit that.

219
00:10:07.660 --> 00:10:10.100
Boom, and you get the object here,

220
00:10:10.100 --> 00:10:12.410
description, image, name and price.

221
00:10:12.410 --> 00:10:16.670
One thing we can do is let's go to this image input here

222
00:10:16.670 --> 00:10:19.390
and let's pop a required on that

223
00:10:19.390 --> 00:10:21.900
just so that if you do submit it without an image,

224
00:10:21.900 --> 00:10:23.530
we get a little bit of validation.

225
00:10:23.530 --> 00:10:24.930
There we go.

226
00:10:24.930 --> 00:10:26.860
It tells us that we need to add it.

227
00:10:26.860 --> 00:10:29.430
Okay, so I think that's enough for this video.

228
00:10:29.430 --> 00:10:31.010
We've rendered out our form,

229
00:10:31.010 --> 00:10:32.320
we've got all the inputs working.

230
00:10:32.320 --> 00:10:33.360
In the next one what we'll do

231
00:10:33.360 --> 00:10:36.680
is we'll hook it up to our backend GraphQL mutation

232
00:10:36.680 --> 00:10:39.220
so that the data that we just console.logged here

233
00:10:39.220 --> 00:10:41.460
actually gets sent over to the backend.

