WEBVTT

1
00:00:00.994 --> 00:00:01.870
All right.

2
00:00:01.870 --> 00:00:04.790
So we just learned that you can make pages in next JS.

3
00:00:04.790 --> 00:00:08.090
You might be asking, okay Wes, how do I do a layout?

4
00:00:08.090 --> 00:00:09.610
How do I get a little bit higher?

5
00:00:09.610 --> 00:00:12.980
And the reality is that in next JS

6
00:00:12.980 --> 00:00:16.270
a page is as high as you can get inside of it.

7
00:00:16.270 --> 00:00:19.210
We're just returning it diff like where's the HTML tag?

8
00:00:19.210 --> 00:00:21.260
Where's the head of the document?

9
00:00:21.260 --> 00:00:22.410
Where's all that other stuff

10
00:00:22.410 --> 00:00:24.840
that you're used to writing in an HTML?

11
00:00:24.840 --> 00:00:27.920
Like, I mean, let me show you real quick for you.

12
00:00:27.920 --> 00:00:32.430
Open up HTML document and you type exclamation mark, tab.

13
00:00:32.430 --> 00:00:33.470
Like where is all this?

14
00:00:33.470 --> 00:00:35.410
The doc type, the HTML

15
00:00:35.410 --> 00:00:40.380
the car set, language on the HTML document,

16
00:00:40.380 --> 00:00:41.213
all of that.

17
00:00:41.213 --> 00:00:42.480
Where's the body tech, right?

18
00:00:42.480 --> 00:00:46.400
Well, everything inside of the page

19
00:00:46.400 --> 00:00:48.710
just gets dumped into the body.

20
00:00:48.710 --> 00:00:53.270
And if you want control either over like a layout component,

21
00:00:53.270 --> 00:00:54.690
that goes, shows up on every page

22
00:00:54.690 --> 00:00:58.540
or you want control over the stuff that shows up in here

23
00:00:58.540 --> 00:00:59.660
that's what this video is going to do.

24
00:00:59.660 --> 00:01:00.645
We're going to get into that.

25
00:01:00.645 --> 00:01:04.150
So let's start by the very simplest.

26
00:01:04.150 --> 00:01:05.110
How would I get something

27
00:01:05.110 --> 00:01:07.640
like the NAF to show up on every single page?

28
00:01:07.640 --> 00:01:12.610
Well, you might think, okay, let's make a page component.

29
00:01:12.610 --> 00:01:15.030
So we're going to go into our components folder

30
00:01:15.030 --> 00:01:16.020
and make a new file.

31
00:01:16.020 --> 00:01:19.300
And we'll call that capital P page dot JS

32
00:01:20.186 --> 00:01:24.950
and let's make a function called capital P page.

33
00:01:24.950 --> 00:01:26.633
And we'll export,

34
00:01:27.640 --> 00:01:30.110
default that cause we're going to be importing it.

35
00:01:30.110 --> 00:01:32.210
And then from there we'll return,

36
00:01:32.210 --> 00:01:34.480
let's just return a div for now.

37
00:01:34.480 --> 00:01:37.500
And we'll just put a h two.

38
00:01:37.500 --> 00:01:39.700
Doesn't really matter what one we'll delete this.

39
00:01:39.700 --> 00:01:43.520
Just say I am the page component right? Okay, good.

40
00:01:43.520 --> 00:01:48.480
Now, if I wanted that to show up on every single page

41
00:01:48.480 --> 00:01:50.060
in here, how do we do that?

42
00:01:50.060 --> 00:01:53.910
Well, you might think, okay, let's go to our index page here

43
00:01:53.910 --> 00:01:57.330
and let's start using that page component.

44
00:01:57.330 --> 00:01:58.850
So instead of having a div here

45
00:01:58.850 --> 00:02:01.830
let's replace it with a page component, right?

46
00:02:01.830 --> 00:02:03.740
You notice that that's a capital P.

47
00:02:03.740 --> 00:02:06.550
That's because it is reusable in react.

48
00:02:06.550 --> 00:02:08.118
Now, right away when I save, you'll see.

49
00:02:08.118 --> 00:02:11.350
First, we've got these little red squiggles under here.

50
00:02:11.350 --> 00:02:13.120
It says, page is not defined.

51
00:02:13.120 --> 00:02:15.240
And it's showing up in here.

52
00:02:15.240 --> 00:02:19.770
Now, these red squiggles, this is my IES lint config.

53
00:02:19.770 --> 00:02:21.240
I have installed it.

54
00:02:21.240 --> 00:02:26.240
And I've also included the settings in your package JSON.

55
00:02:26.335 --> 00:02:28.960
So for you to actually get it up and running

56
00:02:28.960 --> 00:02:31.670
you just need to install the vs code eslint plugin.

57
00:02:31.670 --> 00:02:33.270
It probably is working already.

58
00:02:33.270 --> 00:02:35.610
If it's not, I'm not going to go into it in this,

59
00:02:35.610 --> 00:02:38.110
because it changes so often.

60
00:02:38.110 --> 00:02:41.560
But I do have these settings and all the instructions

61
00:02:41.560 --> 00:02:44.186
both on Wesboss, Eslint config.

62
00:02:44.186 --> 00:02:46.360
As well as if you just Google,

63
00:02:46.360 --> 00:02:48.213
No-Sweat Eslint and Prettier.

64
00:02:48.213 --> 00:02:50.620
I have a YouTube video showing you how

65
00:02:50.620 --> 00:02:53.026
and that's updated all the time, showing you how to,

66
00:02:53.026 --> 00:02:56.320
how to get it working so that you can get the feedback here.

67
00:02:56.320 --> 00:02:57.930
So why is that happening?

68
00:02:57.930 --> 00:03:00.610
Well, that's happening because,

69
00:03:00.610 --> 00:03:02.470
we haven't imported that page.

70
00:03:02.470 --> 00:03:05.980
So we know in react is if you create a component here

71
00:03:05.980 --> 00:03:08.230
it will not be accessible until you import it.

72
00:03:08.230 --> 00:03:09.610
So what we could do here is

73
00:03:09.610 --> 00:03:13.710
is we'd go to the top and say import page from quotes.

74
00:03:13.710 --> 00:03:15.980
Okay, so now we are in the pages directory

75
00:03:15.980 --> 00:03:18.670
and our page is in the components directory.

76
00:03:18.670 --> 00:03:21.000
So we take a look here, we're here.

77
00:03:21.000 --> 00:03:22.190
We need to go up a level

78
00:03:22.190 --> 00:03:25.020
and then into components and then into page.

79
00:03:25.020 --> 00:03:27.474
So dot, dot up, okay.

80
00:03:27.474 --> 00:03:32.130
Then we go into the components directory,

81
00:03:32.130 --> 00:03:35.370
and then we go into and grab our page.

82
00:03:35.370 --> 00:03:36.500
One kind of cool thing,

83
00:03:36.500 --> 00:03:38.900
and I'm going to be using this quite a bit

84
00:03:38.900 --> 00:03:42.410
in this course is vs codes, auto import.

85
00:03:42.410 --> 00:03:45.650
So instead of having to type this every single time

86
00:03:45.650 --> 00:03:47.780
what we can do is we go

87
00:03:47.780 --> 00:03:49.930
to the thing where it says, it's not defined.

88
00:03:49.930 --> 00:03:52.330 line:15% 
You can hit your control space bar

89
00:03:52.330 --> 00:03:56.790 line:15% 
and that will open up this and you'll see auto import.

90
00:03:56.790 --> 00:04:00.150
And usually it's either one of these square cubes

91
00:04:01.030 --> 00:04:03.337
that's purple or it's one of these.

92
00:04:03.337 --> 00:04:05.250
I don't even know what that is,

93
00:04:05.250 --> 00:04:08.330
like a chocolate bar with squares in it.

94
00:04:08.330 --> 00:04:11.450
You can auto import it, click on it.

95
00:04:11.450 --> 00:04:13.250
And you'll see that it figured out

96
00:04:13.250 --> 00:04:16.593
because we already called it because we called it page here.

97
00:04:17.930 --> 00:04:21.220
It knows, Oh, I can auto import that in from there.

98
00:04:21.220 --> 00:04:22.390
Now there's one more squiggly.

99
00:04:22.390 --> 00:04:25.157
Once I give that a save, boop, it turns over.

100
00:04:25.157 --> 00:04:27.551
And the reason why that happened is because,

101
00:04:27.551 --> 00:04:30.820
I have my settings set up to use single quotes

102
00:04:30.820 --> 00:04:32.980
and it will auto import it with double quotes.

103
00:04:32.980 --> 00:04:34.524
But once I give it a save

104
00:04:34.524 --> 00:04:37.210
both the Eslint and the Prettier that's running

105
00:04:37.210 --> 00:04:40.330
in that config showed you will auto fix it for you

106
00:04:40.330 --> 00:04:41.610
which is awesome.

107
00:04:41.610 --> 00:04:43.780
Again, if that auto fix is not working

108
00:04:43.780 --> 00:04:45.367
look at the docs for the Eslint

109
00:04:45.367 --> 00:04:47.214
and it will show you how to get that up and running.

110
00:04:47.214 --> 00:04:48.110
Okay, cool.

111
00:04:48.110 --> 00:04:50.956
So now we have a page component

112
00:04:50.956 --> 00:04:53.720
and we are wrapping each of our pages in it.

113
00:04:53.720 --> 00:04:56.110
So a page, it says, hello

114
00:04:56.110 --> 00:04:57.850
but it says I am the page component.

115
00:04:57.850 --> 00:05:02.240
So the next question I have is why is this not showing up?

116
00:05:02.240 --> 00:05:03.709
Well that's because if we look

117
00:05:03.709 --> 00:05:05.673
at our page component here,

118
00:05:07.010 --> 00:05:07.843
you'll note that,

119
00:05:07.843 --> 00:05:11.850
we are actually not rendering out anything to it.

120
00:05:11.850 --> 00:05:12.970
So what we do is,

121
00:05:12.970 --> 00:05:15.380
we render out the children of that component.

122
00:05:15.380 --> 00:05:16.560
So if you take a look,

123
00:05:16.560 --> 00:05:19.700
let's look at our react dev tools here,

124
00:05:19.700 --> 00:05:23.839
we'll go into our components and I can't make it bigger

125
00:05:23.839 --> 00:05:27.108
for whatever reason react dev tools has done this forever.

126
00:05:27.108 --> 00:05:28.466
But if we take a look

127
00:05:28.466 --> 00:05:33.460
at our look for our page component, here we go,

128
00:05:33.460 --> 00:05:37.910
you see that our child of our page component right here

129
00:05:37.910 --> 00:05:40.410
is P there's a, there's a paragraph.

130
00:05:40.410 --> 00:05:42.355
And that is this.

131
00:05:42.355 --> 00:05:47.355
If I put another, maybe I put a code and save our

132
00:05:48.466 --> 00:05:52.610
you'll see that our array is there's a paragraph and a code.

133
00:05:52.610 --> 00:05:55.690
So in order to render out the children that we passed

134
00:05:55.690 --> 00:05:57.580
to our page component, we simply go

135
00:05:57.580 --> 00:06:00.901
into our page component and simply curly brackets.

136
00:06:00.901 --> 00:06:03.920
And we need to render out the children.

137
00:06:03.920 --> 00:06:07.340
Now, again, these children variable is not defined.

138
00:06:07.340 --> 00:06:08.600
Where do we get it from?

139
00:06:08.600 --> 00:06:11.890
Well, you get it from props dot children.

140
00:06:11.890 --> 00:06:14.790
And the props of a component

141
00:06:14.790 --> 00:06:19.240
in react can be taken in via the arguments of the function.

142
00:06:19.240 --> 00:06:21.550
So it normally looks like this props.

143
00:06:21.550 --> 00:06:25.310
And then we go here and we say, prop, stop children.

144
00:06:25.310 --> 00:06:26.260
And you see it. There we go.

145
00:06:26.260 --> 00:06:28.960
There's our hello and there's our far showing up.

146
00:06:28.960 --> 00:06:31.284
And now we're rendering out anything that gets passed

147
00:06:31.284 --> 00:06:32.380
to the page

148
00:06:32.380 --> 00:06:34.920
or anything that is a child of the page component.

149
00:06:34.920 --> 00:06:36.522
I am a child then gets rendered out to that.

150
00:06:36.522 --> 00:06:39.000
Okay, cool.

151
00:06:39.000 --> 00:06:39.833
One more thing.

152
00:06:39.833 --> 00:06:42.570
We got a bit of a squiggly showing up here.

153
00:06:42.570 --> 00:06:44.070
Children is missing and props

154
00:06:44.070 --> 00:06:47.410
and you must use de-structuring assignment.

155
00:06:47.410 --> 00:06:50.690
So what normally happens is instead of just passing props

156
00:06:50.690 --> 00:06:52.340
and referencing all the children,

157
00:06:52.340 --> 00:06:55.070
you destructure this props argument

158
00:06:55.070 --> 00:06:57.240
into the actual props that you need.

159
00:06:57.240 --> 00:06:59.510
And the way that that works is instead

160
00:06:59.510 --> 00:07:01.730
of just prompts, variable, you destructure

161
00:07:01.730 --> 00:07:04.280
that's curly brackets, children.

162
00:07:04.280 --> 00:07:06.641
And then if we had any other values

163
00:07:06.641 --> 00:07:09.030
that were passed to that as props,

164
00:07:09.030 --> 00:07:10.680
we could get that, get them there.

165
00:07:10.680 --> 00:07:12.782
And then it's just simply children.

166
00:07:12.782 --> 00:07:15.900
So let me show you a once more is if we took this page

167
00:07:15.900 --> 00:07:20.900
and we said, I don't know, cool is equal to heck yeah.

168
00:07:24.870 --> 00:07:25.980
And we went here

169
00:07:25.980 --> 00:07:29.420
and now we can destructure the cool prop

170
00:07:29.420 --> 00:07:34.420
and we could display that cool prop in here, right?

171
00:07:35.610 --> 00:07:36.443
So there we go.

172
00:07:36.443 --> 00:07:40.770
It's being passed as a prop called cool here.

173
00:07:40.770 --> 00:07:45.603
And then it is accessible via the function props like this.

174
00:07:45.603 --> 00:07:49.170
It is still showing us some little red squigglies here.

175
00:07:49.170 --> 00:07:52.670
And that is because it is missing in props validation.

176
00:07:52.670 --> 00:07:57.670
So that's not an error, but if you want to do prop types

177
00:07:57.732 --> 00:07:59.570
I can show you how that would work.

178
00:07:59.570 --> 00:08:03.400
We take our page and we say, adopt prop types

179
00:08:03.400 --> 00:08:05.743
capital T is equal to that.

180
00:08:06.640 --> 00:08:08.040
And then we say

181
00:08:08.040 --> 00:08:13.040
cool is going to be equal to a prop types dot string.

182
00:08:14.724 --> 00:08:17.010
Now we need to import that.

183
00:08:17.010 --> 00:08:19.734
That looks like the auto import isn't working for that one.

184
00:08:19.734 --> 00:08:22.570
Maybe it's just prop types.

185
00:08:22.570 --> 00:08:24.740
I'm not sure what the name of it is so we can just

186
00:08:24.740 --> 00:08:25.690
manually import it.

187
00:08:25.690 --> 00:08:30.690
So import prop types from, and then it's prop dash types.

188
00:08:31.209 --> 00:08:36.209
And you see the cool is being is no longer showing up.

189
00:08:36.631 --> 00:08:39.220
That's pretty introductory react stuff.

190
00:08:39.220 --> 00:08:40.530
I'm not going to write the prop types

191
00:08:40.530 --> 00:08:42.800
for absolutely every single thing.

192
00:08:42.800 --> 00:08:43.633
You can do it.

193
00:08:43.633 --> 00:08:44.550
If you're using TypeScript,

194
00:08:44.550 --> 00:08:47.440
you probably aren't even using prop types.

195
00:08:47.440 --> 00:08:50.400
And I've shown many times in my other courses how to use it.

196
00:08:50.400 --> 00:08:51.800
So I'll show you in this one.

197
00:08:51.800 --> 00:08:53.110
Again, the children is not there.

198
00:08:53.110 --> 00:08:57.028
So we say children and it's prop types dot

199
00:08:57.028 --> 00:09:00.510
and you can see we've got all of the possible ones

200
00:09:00.510 --> 00:09:01.603
that we have here.

201
00:09:02.514 --> 00:09:03.710
A string object

202
00:09:03.710 --> 00:09:08.710
Boolean function node, and it would be an array

203
00:09:09.250 --> 00:09:12.540
Of node.

204
00:09:12.540 --> 00:09:16.683
Oh, it's prop types dot node.

205
00:09:17.590 --> 00:09:18.423
There we go.

206
00:09:18.423 --> 00:09:20.030
That's showing up, let's go to our console

207
00:09:20.030 --> 00:09:21.370
and make sure everything looks good.

208
00:09:21.370 --> 00:09:23.230
Refresh and good, no errors.

209
00:09:23.230 --> 00:09:25.322
The favicon we'll deal with that in just a bit.

210
00:09:25.322 --> 00:09:27.168
Okay. So that is working.

211
00:09:27.168 --> 00:09:31.320
Now the question is if I go to forward slash sell

212
00:09:32.710 --> 00:09:34.950
now the whole thing doesn't work again.

213
00:09:34.950 --> 00:09:36.630
So let's go to our cell page.

214
00:09:36.630 --> 00:09:38.213
So sell dot JS.

215
00:09:39.410 --> 00:09:41.090
Now, do we have to put the page,

216
00:09:41.090 --> 00:09:44.533
to do the whole song and dance the page component in there?

217
00:09:44.533 --> 00:09:46.410
Import it good.

218
00:09:46.410 --> 00:09:49.519
I came in there and now it's working again.

219
00:09:49.519 --> 00:09:51.070
Maybe we'll say, hello.

220
00:09:51.070 --> 00:09:52.983
I am the sell page.

221
00:09:55.340 --> 00:09:58.100
And that, that K, that now shows up, but we've got this

222
00:09:58.100 --> 00:10:00.870
error here and valid prop children type supplied

223
00:10:00.870 --> 00:10:02.890
to page expected and array.

224
00:10:02.890 --> 00:10:06.150
And I think that's because it's expecting an array of nodes.

225
00:10:06.150 --> 00:10:07.900
And in our case is just one node.

226
00:10:07.900 --> 00:10:10.220
We put another paragraph tag there.

227
00:10:10.220 --> 00:10:11.200
I bet it goes away.

228
00:10:11.200 --> 00:10:12.349
Yeah, it does go away.

229
00:10:12.349 --> 00:10:14.390
So how do we fix that?

230
00:10:14.390 --> 00:10:18.730
You can go back to your prop types here and you can say

231
00:10:18.730 --> 00:10:22.810
we want an array of nodes, or we want just a single node.

232
00:10:22.810 --> 00:10:27.810
So you could say prop types dot one of

233
00:10:28.240 --> 00:10:29.880
and then you use a square bracket.

234
00:10:29.880 --> 00:10:31.820
You could say one of an array

235
00:10:31.820 --> 00:10:35.950
of nodes or prop types dot node.

236
00:10:35.950 --> 00:10:40.020
And that will allow us to either take a single node

237
00:10:40.020 --> 00:10:42.801
or an array, but then also you could pass a number.

238
00:10:42.801 --> 00:10:44.700
It just gets a little bit confusing cause

239
00:10:44.700 --> 00:10:46.100
children could be anything.

240
00:10:46.100 --> 00:10:49.150
So what you can do in that case is just prep type, set any

241
00:10:49.150 --> 00:10:52.750
and say anything you pass me down, just, just render it out.

242
00:10:52.750 --> 00:10:55.410
So that is, that's a good use case for any.

243
00:10:55.410 --> 00:10:58.100
It literally could be anything in that case.

244
00:10:58.100 --> 00:11:00.810
So what we did there is we, we wrapped it in a page.

245
00:11:00.810 --> 00:11:01.730
So you might be saying, okay, Wes,

246
00:11:01.730 --> 00:11:04.036
do I have to wrap every single page that I make

247
00:11:04.036 --> 00:11:06.160
in that page component?

248
00:11:06.160 --> 00:11:07.480
Like, is there not some sort

249
00:11:07.480 --> 00:11:10.050
of global layout that I can wrap the entire thing in?

250
00:11:10.050 --> 00:11:11.649
So anytime a page gets created

251
00:11:11.649 --> 00:11:12.968
we wrap it in that.

252
00:11:12.968 --> 00:11:17.968
And the answer to that is yes, there are two special files

253
00:11:18.300 --> 00:11:22.200
in next JS that will allow us to get access both

254
00:11:22.200 --> 00:11:25.380
to the everything inside of the body,

255
00:11:25.380 --> 00:11:26.720
as well as you can go a little bit higher

256
00:11:26.720 --> 00:11:28.760
and get everything in the head of the document.

257
00:11:28.760 --> 00:11:30.020
So what we're going to do is,

258
00:11:30.020 --> 00:11:32.830
we're going to do the first one, which is our app component.

259
00:11:32.830 --> 00:11:35.950
We'll go into our pages directory and make a new file.

260
00:11:35.950 --> 00:11:38.280
It's going to be underscore app dot JS.

261
00:11:38.280 --> 00:11:42.560
So very little in next JS is special.

262
00:11:42.560 --> 00:11:44.240
The only special things are

263
00:11:44.240 --> 00:11:47.460 line:15% 
you must have a pages directory with your pages in it.

264
00:11:47.460 --> 00:11:50.808 line:15% 
And if you want to control anything a little higher

265
00:11:50.808 --> 00:11:54.580
than the page component

266
00:11:54.580 --> 00:11:57.650
you must do it in your app dot JS file.

267
00:11:57.650 --> 00:11:59.510
And then what we'll do in here.

268
00:11:59.510 --> 00:12:02.640
So I'll make a export default function.

269
00:12:02.640 --> 00:12:04.510
We'll call it my app.

270
00:12:04.510 --> 00:12:06.330
And from that, we will return.

271
00:12:06.330 --> 00:12:09.070
And this is where you can actually take your page

272
00:12:09.070 --> 00:12:11.150
component that we made, and then we'll render

273
00:12:11.150 --> 00:12:12.880
out any children that are passed down.

274
00:12:12.880 --> 00:12:15.260
Now, next, Jess is a little bit differently here.

275
00:12:15.260 --> 00:12:17.600
You might think, okay, just children, right?

276
00:12:17.600 --> 00:12:18.650
But it's a little bit different

277
00:12:18.650 --> 00:12:23.650
as it's a prop of the app component.

278
00:12:23.710 --> 00:12:27.490
Here, it's the capital C component prop.

279
00:12:27.490 --> 00:12:30.740
And we also need the page props that are passed

280
00:12:30.740 --> 00:12:33.510
down and here we just use our component

281
00:12:34.818 --> 00:12:39.818
and then we will spread dot, dot, dot page props into it.

282
00:12:40.352 --> 00:12:41.746
Okay, good.

283
00:12:41.746 --> 00:12:43.570
Now you see a couple of squiggles here.

284
00:12:43.570 --> 00:12:44.650
This is prop types.

285
00:12:44.650 --> 00:12:46.860
I'm going to turn that off in future videos.

286
00:12:46.860 --> 00:12:48.710
I thought I would leave it in just for the first few,

287
00:12:48.710 --> 00:12:49.660
just so you can see.

288
00:12:49.660 --> 00:12:52.870
Also you probably will run into that in your own projects.

289
00:12:52.870 --> 00:12:53.703
So I just don't,

290
00:12:53.703 --> 00:12:55.300
I didn't want to turn it off and you can hide it.

291
00:12:55.300 --> 00:12:57.020
And then this is no props spreading.

292
00:12:57.020 --> 00:12:58.670
I'll turn that one off as well.

293
00:12:58.670 --> 00:13:01.680
Cause I believe I honestly that's my own config

294
00:13:01.680 --> 00:13:03.270
but I believe it's, it's totally fine.

295
00:13:03.270 --> 00:13:04.940
There's no, no harm in there.

296
00:13:04.940 --> 00:13:06.670
If you're ever wondering like why you can click

297
00:13:06.670 --> 00:13:10.670
through to it and see it's, it's not bad

298
00:13:10.670 --> 00:13:13.500
but just like why it is a possible rule.

299
00:13:13.500 --> 00:13:14.333
All right.

300
00:13:14.333 --> 00:13:15.166
So we have that.

301
00:13:15.166 --> 00:13:16.640
Now, if we go to our website, now

302
00:13:16.640 --> 00:13:19.374
if you go to a page, well, I'm on the cell page here.

303
00:13:19.374 --> 00:13:21.170
We still see I'm a page component.

304
00:13:21.170 --> 00:13:22.250
We'll go to our cell JS.

305
00:13:22.250 --> 00:13:26.610
Let's take that off now and simply just have a paragraph tag

306
00:13:26.610 --> 00:13:27.690
and you notice, okay, well,

307
00:13:27.690 --> 00:13:29.280
our page component is not working.

308
00:13:29.280 --> 00:13:32.550
I believe we have to do a quick little refresh here.

309
00:13:32.550 --> 00:13:33.603
So kill it.

310
00:13:34.780 --> 00:13:37.423
Return rerun, NPM, run dev,

311
00:13:42.000 --> 00:13:43.360
and then refresh this page.

312
00:13:43.360 --> 00:13:44.640
And there we go now showing up.

313
00:13:44.640 --> 00:13:47.500
So that is one of the few situations where

314
00:13:47.500 --> 00:13:49.949
you do need to kill your build and started again, just

315
00:13:49.949 --> 00:13:53.517
because we're doing a foundational, the foundational thing.

316
00:13:53.517 --> 00:13:54.810
And that might not even be true

317
00:13:54.810 --> 00:13:58.790
that might have changed in a recent version of react.

318
00:13:58.790 --> 00:14:00.190
So now we have our page component.

319
00:14:00.190 --> 00:14:03.650
Now, if I go to any other page like the homepage, you'll see

320
00:14:03.650 --> 00:14:05.590
we have double page components.

321
00:14:05.590 --> 00:14:06.500
Now why?

322
00:14:06.500 --> 00:14:09.700
Because we no longer need to wrap every single page

323
00:14:09.700 --> 00:14:10.533
in this page component,

324
00:14:10.533 --> 00:14:13.440
because it has done being done globally

325
00:14:13.440 --> 00:14:15.310
in our underscore app that JS.

326
00:14:15.310 --> 00:14:17.580
So let's go ahead and remove that.

327
00:14:17.580 --> 00:14:19.430
Let's go ahead and remove that.

328
00:14:19.430 --> 00:14:22.420
And if you do want to return multiple elements

329
00:14:22.420 --> 00:14:24.010
that are adjacent to each other

330
00:14:24.010 --> 00:14:27.690
we can wrap it in what are called react fragments.

331
00:14:27.690 --> 00:14:31.700
And they look like this, which is basically ghost tags.

332
00:14:31.700 --> 00:14:33.850
They do nothing in our case.

333
00:14:33.850 --> 00:14:35.190
So that's awesome.

334
00:14:35.190 --> 00:14:36.920
We can get rid of this import here.

335
00:14:36.920 --> 00:14:41.200
We can get rid of this import here and we are in good shape.

336
00:14:41.200 --> 00:14:42.960
Last thing we want to do is we also want to

337
00:14:42.960 --> 00:14:44.600
make a custom document.

338
00:14:44.600 --> 00:14:46.340
We'll be modifying our app

339
00:14:46.340 --> 00:14:48.790
and our document as we get more into data loading.

340
00:14:48.790 --> 00:14:51.670
But for now we want to make a custom document layout.

341
00:14:51.670 --> 00:14:53.210
We'll go into our pages here

342
00:14:53.210 --> 00:14:56.623
and make it honors core document dot JS.

343
00:14:57.570 --> 00:15:00.250
And again, we'll export default.

344
00:15:00.250 --> 00:15:02.100
And this is a little bit weird as well

345
00:15:02.100 --> 00:15:03.010
not necessarily weird,

346
00:15:03.010 --> 00:15:04.390
but this is one of the few places where,

347
00:15:04.390 --> 00:15:07.100
we will be using a class in our code.

348
00:15:07.100 --> 00:15:10.190
I guess there is no API for just function base.

349
00:15:10.190 --> 00:15:12.010
So we have class my document

350
00:15:15.430 --> 00:15:16.560
It extends

351
00:15:19.410 --> 00:15:20.873
Capital D document.

352
00:15:22.200 --> 00:15:27.200
And we got to import that import document

353
00:15:28.210 --> 00:15:32.763
from next forward slash document.

354
00:15:34.049 --> 00:15:38.650
Okay. And then inside of here, we have a render method.

355
00:15:38.650 --> 00:15:43.650
So this is classes in react have a render method.

356
00:15:43.970 --> 00:15:48.250
And that's the same thing as just returning from here.

357
00:15:48.250 --> 00:15:50.810
This, this course is going to be done primarily

358
00:15:50.810 --> 00:15:53.246
or entirely in functions and hooks.

359
00:15:53.246 --> 00:15:57.250
And it doesn't will not really be using these

360
00:15:57.250 --> 00:15:59.450
classes outside of this one file just

361
00:15:59.450 --> 00:16:00.990
because our next year is currently

362
00:16:00.990 --> 00:16:02.874
at the time of the recording does not have an API

363
00:16:02.874 --> 00:16:05.550
for hooks or anything like that.

364
00:16:05.550 --> 00:16:08.670
So render from there, we need to return.

365
00:16:08.670 --> 00:16:10.540
And this is, this is a little bit funky as well

366
00:16:10.540 --> 00:16:13.540
capital HTML that's

367
00:16:13.540 --> 00:16:17.063
and that needs to be imported from next as well.

368
00:16:18.010 --> 00:16:19.363
Capital HTML.

369
00:16:20.740 --> 00:16:21.980
We also, while we're here,

370
00:16:21.980 --> 00:16:23.360
let's just grab the rest,

371
00:16:23.360 --> 00:16:28.100
capital H head next script and main.

372
00:16:30.530 --> 00:16:32.840
And then in here, this is your HTML tag.

373
00:16:32.840 --> 00:16:35.490
If you have any custom attributes that need to put

374
00:16:35.490 --> 00:16:40.080
on your HTML tag, like a Lang attribute in my case

375
00:16:40.080 --> 00:16:40.913
I'm Canadian.

376
00:16:40.913 --> 00:16:45.800
So I want to say is written in Canadian and inside of that

377
00:16:45.800 --> 00:16:50.800
you have a capital H head tag and we will be putting stuff

378
00:16:50.810 --> 00:16:51.643
in there.

379
00:16:51.643 --> 00:16:52.476
We actually don't need that for now.

380
00:16:52.476 --> 00:16:53.710
So you can comment it out.

381
00:16:53.710 --> 00:16:56.410
We'll come back to that for style components, just a second.

382
00:16:56.410 --> 00:16:58.220
Then we do a regular body tag.

383
00:16:58.220 --> 00:16:59.430
That's not a custom one

384
00:16:59.430 --> 00:17:04.430
and we have our main and we have our next script.

385
00:17:09.570 --> 00:17:10.940
And this is just boiler plate.

386
00:17:10.940 --> 00:17:13.515
That next year it's usually tucks away for themselves.

387
00:17:13.515 --> 00:17:16.220
But the reason why we do that is because we

388
00:17:16.220 --> 00:17:20.680
need access to be able to do custom HTML attributes as well

389
00:17:20.680 --> 00:17:25.680
as we need the ability to stick our CSS inside of the head

390
00:17:25.840 --> 00:17:27.650
which we're going to run into in just a second.

391
00:17:27.650 --> 00:17:30.550
One thing I haven't done here is you've got to return this

392
00:17:33.290 --> 00:17:35.763
and that is looking pretty good.

393
00:17:36.800 --> 00:17:39.080
This is not going to change anything except the fact

394
00:17:39.080 --> 00:17:42.590
that we should see a Lang show up on our HTML tag.

395
00:17:42.590 --> 00:17:45.140
So if refresh this, it's not showing up, probably

396
00:17:45.140 --> 00:17:48.603
need to kill it and rerun NPM run dev.

397
00:17:52.510 --> 00:17:53.343
And there we go.

398
00:17:53.343 --> 00:17:55.277
Our HTML Lang is showing up

399
00:17:55.277 --> 00:17:59.760
and I don't believe there are any issues showing

400
00:17:59.760 --> 00:18:01.530
up or we're in good shape here.

401
00:18:01.530 --> 00:18:02.510
Okay. So good.

402
00:18:02.510 --> 00:18:03.940
I know that one was a little bit heavier.

403
00:18:03.940 --> 00:18:05.120
Like what's the point of that Wes?

404
00:18:05.120 --> 00:18:05.953
That'll make sense.

405
00:18:05.953 --> 00:18:07.960
This is just a bit of setup in the next video.

406
00:18:07.960 --> 00:18:11.030
Let's jump into actually creating a nav

407
00:18:11.030 --> 00:18:12.323
on that page component.

